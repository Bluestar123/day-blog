import{_ as n,c as s,o as a,d as t}from"./app.57818325.js";const g='{"title":"CapitalizeString","description":"","frontmatter":{},"headers":[{"level":2,"title":"CapitalizeString","slug":"capitalizestring"},{"level":2,"title":"FirstChar","slug":"firstchar"},{"level":2,"title":"LastChar","slug":"lastchar"},{"level":2,"title":"StringToTuple","slug":"stringtotuple"},{"level":2,"title":"TupleToString","slug":"tupletostring"},{"level":2,"title":"RepeatString","slug":"repeatstring-t-c"},{"level":2,"title":"SplitString","slug":"splitstring"},{"level":2,"title":"LengthOfString","slug":"lengthofstring"},{"level":2,"title":"KebabCase","slug":"kebabcase"},{"level":2,"title":"CamelCase","slug":"camelcase"},{"level":2,"title":"ObjectAccessPaths","slug":"objectaccesspaths"},{"level":2,"title":"ComponentEmitsType","slug":"componentemitstype"},{"level":2,"title":"LengthOfTuple","slug":"lengthoftuple"},{"level":2,"title":"FirstItem","slug":"firstitem"},{"level":2,"title":"LastItem","slug":"lastitem"},{"level":2,"title":"Shift","slug":"shift"},{"level":2,"title":"Push","slug":"push"},{"level":2,"title":"ReverseTuple","slug":"reversetuple"},{"level":2,"title":"Flat","slug":"flat"},{"level":2,"title":"Repeat","slug":"repeat-t-c"},{"level":2,"title":"Filter","slug":"filter-t-a"},{"level":2,"title":"FindIndex","slug":"findindex-t-e"},{"level":2,"title":"TupleToEnum","slug":"tupletoenum"},{"level":2,"title":"Slice","slug":"slice"},{"level":2,"title":"Splice","slug":"splice"}],"relativePath":"ts/tests/string.md","lastUpdated":1638778795519}',p={},e=t(`__VP_STATIC_START__<h2 id="capitalizestring" tabindex="-1">CapitalizeString <a class="header-anchor" href="#capitalizestring" aria-hidden="true">#</a></h2><p>\u9996\u5B57\u6BCD\u5927\u5199</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">a1</span> <span class="token operator">=</span> CapitalizeString<span class="token operator">&lt;</span><span class="token string">&#39;handler&#39;</span><span class="token operator">&gt;</span>       <span class="token comment">// Handler</span>
<span class="token keyword">type</span> <span class="token class-name">a2</span> <span class="token operator">=</span> CapitalizeString<span class="token operator">&lt;</span><span class="token string">&#39;parent&#39;</span><span class="token operator">&gt;</span>        <span class="token comment">// Parent</span>
<span class="token keyword">type</span> <span class="token class-name">a3</span> <span class="token operator">=</span> CapitalizeString<span class="token operator">&lt;</span><span class="token number">233</span><span class="token operator">&gt;</span>             <span class="token comment">// 233</span>
</code></pre></div><h2 id="firstchar" tabindex="-1">FirstChar <a class="header-anchor" href="#firstchar" aria-hidden="true">#</a></h2><p>\u83B7\u53D6\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u4E2D\u7684\u7B2C\u4E00\u4E2A\u5B57\u7B26</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> FirstChar<span class="token operator">&lt;</span><span class="token string">&#39;BFE&#39;</span><span class="token operator">&gt;</span> <span class="token comment">// &#39;B&#39;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token operator">=</span> FirstChar<span class="token operator">&lt;</span><span class="token string">&#39;dev&#39;</span><span class="token operator">&gt;</span> <span class="token comment">// &#39;d&#39;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token operator">=</span> FirstChar<span class="token operator">&lt;</span><span class="token string">&#39;&#39;</span><span class="token operator">&gt;</span> <span class="token comment">// never</span>
</code></pre></div><h2 id="lastchar" tabindex="-1">LastChar <a class="header-anchor" href="#lastchar" aria-hidden="true">#</a></h2><p>\u83B7\u53D6\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u4E2D\u7684\u6700\u540E\u4E00\u4E2A\u5B57\u7B26</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> LastChar<span class="token operator">&lt;</span><span class="token string">&#39;BFE&#39;</span><span class="token operator">&gt;</span> <span class="token comment">// &#39;E&#39;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token operator">=</span> LastChar<span class="token operator">&lt;</span><span class="token string">&#39;dev&#39;</span><span class="token operator">&gt;</span> <span class="token comment">// &#39;v&#39;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token operator">=</span> LastChar<span class="token operator">&lt;</span><span class="token string">&#39;&#39;</span><span class="token operator">&gt;</span> <span class="token comment">// never</span>
</code></pre></div><h2 id="stringtotuple" tabindex="-1">StringToTuple <a class="header-anchor" href="#stringtotuple" aria-hidden="true">#</a></h2><p>\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A\u5143\u7EC4\u7C7B\u578B</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> StringToTuple<span class="token operator">&lt;</span><span class="token string">&#39;BFE.dev&#39;</span><span class="token operator">&gt;</span> <span class="token comment">// [&#39;B&#39;, &#39;F&#39;, &#39;E&#39;, &#39;.&#39;, &#39;d&#39;, &#39;e&#39;,&#39;v&#39;]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token operator">=</span> StringToTuple<span class="token operator">&lt;</span><span class="token string">&#39;&#39;</span><span class="token operator">&gt;</span> <span class="token comment">// []</span>
</code></pre></div><h2 id="tupletostring" tabindex="-1">TupleToString <a class="header-anchor" href="#tupletostring" aria-hidden="true">#</a></h2><p>\u5C06\u5B57\u7B26\u4E32\u7C7B\u578B\u7684\u5143\u7D20\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7C7B\u578B</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> TupleToString<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token comment">// &#39;abc&#39;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token operator">=</span> TupleToString<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>              <span class="token comment">// &#39;&#39;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token operator">=</span> TupleToString<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>           <span class="token comment">// &#39;a&#39;</span>
</code></pre></div><h2 id="repeatstring-t-c" tabindex="-1">RepeatString&lt;T,C&gt; <a class="header-anchor" href="#repeatstring-t-c" aria-hidden="true">#</a></h2><p>\u590D\u5236\u5B57\u7B26T\u4E3A\u5B57\u7B26\u4E32\u7C7B\u578B\uFF0C\u957F\u5EA6\u4E3AC</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> RepeatString<span class="token operator">&lt;</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token operator">&gt;</span> <span class="token comment">// &#39;aaa&#39;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token operator">=</span> RepeatString<span class="token operator">&lt;</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token operator">&gt;</span> <span class="token comment">// &#39;&#39;</span>
</code></pre></div><h2 id="splitstring" tabindex="-1">SplitString <a class="header-anchor" href="#splitstring" aria-hidden="true">#</a></h2><p>\u5C06\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7C7B\u578B\u6309\u7167\u6307\u5B9A\u5B57\u7B26\uFF0C\u5206\u5272\u4E3A\u5143\u7EC4\u3002\u65E0\u6CD5\u5206\u5272\u5219\u8FD4\u56DE\u539F\u5B57\u7B26\u4E32\u5B57\u9762\u91CF</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A1</span></span> <span class="token operator">=</span> SplitString<span class="token operator">&lt;</span><span class="token string">&#39;handle-open-flag&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-&#39;</span><span class="token operator">&gt;</span>        <span class="token comment">// [&quot;handle&quot;, &quot;open&quot;, &quot;flag&quot;]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A2</span></span> <span class="token operator">=</span> SplitString<span class="token operator">&lt;</span><span class="token string">&#39;open-flag&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-&#39;</span><span class="token operator">&gt;</span>               <span class="token comment">// [&quot;open&quot;, &quot;flag&quot;]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A3</span></span> <span class="token operator">=</span> SplitString<span class="token operator">&lt;</span><span class="token string">&#39;handle.open.flag&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.&#39;</span><span class="token operator">&gt;</span>        <span class="token comment">// [&quot;handle&quot;, &quot;open&quot;, &quot;flag&quot;]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A4</span></span> <span class="token operator">=</span> SplitString<span class="token operator">&lt;</span><span class="token string">&#39;open.flag&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.&#39;</span><span class="token operator">&gt;</span>               <span class="token comment">// [&quot;open&quot;, &quot;flag&quot;]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A5</span></span> <span class="token operator">=</span> SplitString<span class="token operator">&lt;</span><span class="token string">&#39;open.flag&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-&#39;</span><span class="token operator">&gt;</span>               <span class="token comment">// [&quot;open.flag&quot;]</span>
</code></pre></div><h2 id="lengthofstring" tabindex="-1">LengthOfString <a class="header-anchor" href="#lengthofstring" aria-hidden="true">#</a></h2><p>\u8BA1\u7B97\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7C7B\u578B\u7684\u957F\u5EA6</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> LengthOfString<span class="token operator">&lt;</span><span class="token string">&#39;BFE.dev&#39;</span><span class="token operator">&gt;</span> <span class="token comment">// 7</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token operator">=</span> LengthOfString<span class="token operator">&lt;</span><span class="token string">&#39;&#39;</span><span class="token operator">&gt;</span> <span class="token comment">// 0</span>
</code></pre></div><h2 id="kebabcase" tabindex="-1">KebabCase <a class="header-anchor" href="#kebabcase" aria-hidden="true">#</a></h2><p>\u9A7C\u5CF0\u547D\u540D\u8F6C\u6A2A\u6760\u547D\u540D</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">a1</span> <span class="token operator">=</span> KebabCase<span class="token operator">&lt;</span><span class="token string">&#39;HandleOpenFlag&#39;</span><span class="token operator">&gt;</span>           <span class="token comment">// handle-open-flag</span>
<span class="token keyword">type</span> <span class="token class-name">a2</span> <span class="token operator">=</span> KebabCase<span class="token operator">&lt;</span><span class="token string">&#39;OpenFlag&#39;</span><span class="token operator">&gt;</span>                 <span class="token comment">// open-flag</span>
</code></pre></div><h2 id="camelcase" tabindex="-1">CamelCase <a class="header-anchor" href="#camelcase" aria-hidden="true">#</a></h2><p>\u6A2A\u6760\u547D\u540D\u8F6C\u5316\u4E3A\u9A7C\u5CF0\u547D\u540D</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">a1</span> <span class="token operator">=</span> CamelCase<span class="token operator">&lt;</span><span class="token string">&#39;handle-open-flag&#39;</span><span class="token operator">&gt;</span>         <span class="token comment">// HandleOpenFlag</span>
<span class="token keyword">type</span> <span class="token class-name">a2</span> <span class="token operator">=</span> CamelCase<span class="token operator">&lt;</span><span class="token string">&#39;open-flag&#39;</span><span class="token operator">&gt;</span>                <span class="token comment">// OpenFlag</span>
</code></pre></div><h2 id="objectaccesspaths" tabindex="-1">ObjectAccessPaths <a class="header-anchor" href="#objectaccesspaths" aria-hidden="true">#</a></h2><p>\u5F97\u5230\u5BF9\u8C61\u4E2D\u7684\u503C\u8BBF\u95EE\u5B57\u7B26\u4E32</p><div class="language-ts"><pre><code><span class="token comment">// \u7B80\u5355\u6765\u8BF4\uFF0C\u5C31\u662F\u6839\u636E\u5982\u4E0B\u5BF9\u8C61\u7C7B\u578B\uFF1A</span>
<span class="token comment">/*
{
    home: {
        topBar: {
            title: &#39;\u9876\u90E8\u6807\u9898&#39;,
            welcome: &#39;\u6B22\u8FCE\u767B\u5F55&#39;
        },
        bottomBar: {
            notes: &#39;XXX\u5907\u6848\uFF0C\u5F52XXX\u6240\u6709&#39;,
        },
    },
    login: {
        username: &#39;\u7528\u6237\u540D&#39;,
        password: &#39;\u5BC6\u7801&#39;
    }
}
*/</span>
<span class="token comment">// \u5F97\u5230\u8054\u5408\u7C7B\u578B\uFF1A</span>
<span class="token comment">/*
home.topBar.title | home.topBar.welcome | home.bottomBar.notes | login.username | login.password
*/</span>

<span class="token comment">// \u5B8C\u6210 createI18n \u51FD\u6570\u4E2D\u7684 ObjectAccessPaths&lt;Schema&gt;\uFF0C\u9650\u5236\u51FD\u6570i18n\u7684\u53C2\u6570\u4E3A\u5408\u6CD5\u7684\u5C5E\u6027\u8BBF\u95EE\u5B57\u7B26\u4E32</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">createI18n</span><span class="token generic class-name"><span class="token operator">&lt;</span>Schema<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>schema<span class="token operator">:</span> Schema<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>path<span class="token operator">:</span> ObjectAccessPaths<span class="token operator">&lt;</span>Schema<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>schema<span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">}</span>

<span class="token comment">// i18n\u51FD\u6570\u7684\u53C2\u6570\u7C7B\u578B\u4E3A\uFF1Ahome.topBar.title | home.topBar.welcome | home.bottomBar.notes | login.username | login.password</span>
<span class="token keyword">const</span> i18n <span class="token operator">=</span> <span class="token function">createI18n</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    home<span class="token operator">:</span> <span class="token punctuation">{</span>
        topBar<span class="token operator">:</span> <span class="token punctuation">{</span>
            title<span class="token operator">:</span> <span class="token string">&#39;\u9876\u90E8\u6807\u9898&#39;</span><span class="token punctuation">,</span>
            welcome<span class="token operator">:</span> <span class="token string">&#39;\u6B22\u8FCE\u767B\u5F55&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        bottomBar<span class="token operator">:</span> <span class="token punctuation">{</span>
            notes<span class="token operator">:</span> <span class="token string">&#39;XXX\u5907\u6848\uFF0C\u5F52XXX\u6240\u6709&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    login<span class="token operator">:</span> <span class="token punctuation">{</span>
        username<span class="token operator">:</span> <span class="token string">&#39;\u7528\u6237\u540D&#39;</span><span class="token punctuation">,</span>
        password<span class="token operator">:</span> <span class="token string">&#39;\u5BC6\u7801&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">i18n</span><span class="token punctuation">(</span><span class="token string">&#39;home.topBar.title&#39;</span><span class="token punctuation">)</span>           <span class="token comment">// correct</span>
<span class="token function">i18n</span><span class="token punctuation">(</span><span class="token string">&#39;home.topBar.welcome&#39;</span><span class="token punctuation">)</span>         <span class="token comment">// correct</span>
<span class="token function">i18n</span><span class="token punctuation">(</span><span class="token string">&#39;home.bottomBar.notes&#39;</span><span class="token punctuation">)</span>        <span class="token comment">// correct</span>

<span class="token comment">// i18n(&#39;home.login.abc&#39;)              // error\uFF0C\u4E0D\u5B58\u5728\u7684\u5C5E\u6027</span>
<span class="token comment">// i18n(&#39;home.topBar&#39;)                 // error\uFF0C\u6CA1\u6709\u5230\u6700\u540E\u4E00\u4E2A\u5C5E\u6027</span>
</code></pre></div><h2 id="componentemitstype" tabindex="-1">ComponentEmitsType <a class="header-anchor" href="#componentemitstype" aria-hidden="true">#</a></h2><p>\u5B9A\u4E49\u7EC4\u4EF6\u7684\u76D1\u542C\u4E8B\u4EF6\u7C7B\u578B</p><div class="language-ts"><pre><code><span class="token comment">// \u5B9E\u73B0 ComponentEmitsType&lt;Emits&gt; \u7C7B\u578B\uFF0C\u5C06</span>
<span class="token comment">/*
{
    &#39;handle-open&#39;: (flag: boolean) =&gt; true,
    &#39;preview-item&#39;: (data: { item: any, index: number }) =&gt; true,
    &#39;close-item&#39;: (data: { item: any, index: number }) =&gt; true,
}
*/</span>
<span class="token comment">// \u8F6C\u5316\u4E3A\u7C7B\u578B</span>
<span class="token comment">/*
{
    onHandleOpen?: (flag: boolean) =&gt; void,
    onPreviewItem?: (data: { item: any, index: number }) =&gt; void,
    onCloseItem?: (data: { item: any, index: number }) =&gt; void,
}
*/</span>


<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">createComponent</span><span class="token generic class-name"><span class="token operator">&lt;</span>Emits <span class="token keyword">extends</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span>emits<span class="token operator">:</span> Emits<span class="token punctuation">)</span><span class="token operator">:</span> ComponentEmitsType<span class="token operator">&lt;</span>Emits<span class="token operator">&gt;</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>emits<span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">}</span>

<span class="token comment">// \u6700\u540E\u8FD4\u56DE\u7684 Component\u53D8\u91CF\u7C7B\u578B\u4E3A\u4E00\u4E2A\u5408\u6CD5\u7684React\u7EC4\u4EF6\u7C7B\u578B\uFF0C\u5E76\u4E14\u80FD\u591F\u901A\u8FC7\`on\u4E8B\u4EF6\u9A7C\u5CF0\u547D\u540D\`\u7684\u65B9\u5F0F\uFF0C\u76D1\u542C\u5B9A\u4E49\u7684\u4E8B\u4EF6\uFF0C\u5E76\u4E14\u80FD\u591F\u81EA\u52A8\u63A8\u5BFC\u51FA\u4E8B\u4EF6\u7684\u53C2\u6570\u7C7B\u578B</span>
<span class="token keyword">const</span> Component <span class="token operator">=</span> <span class="token function">createComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token string">&#39;handle-open&#39;</span><span class="token operator">:</span> <span class="token punctuation">(</span>flag<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token string">&#39;preview-item&#39;</span><span class="token operator">:</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token punctuation">{</span> item<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> index<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token string">&#39;close-item&#39;</span><span class="token operator">:</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token punctuation">{</span> item<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> index<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>Component
        <span class="token comment">// onHandleOpen \u7684\u7C7B\u578B\u4E3A (flag: boolean) =&gt; void</span>
        onHandleOpen<span class="token operator">=</span><span class="token punctuation">{</span>val <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
        <span class="token comment">// onPreviewItem \u7684\u7C7B\u578B\u4E3A (data: { item: any, index: number }) =&gt; void</span>
        onPreviewItem<span class="token operator">=</span><span class="token punctuation">{</span>val <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> <span class="token punctuation">{</span>item<span class="token punctuation">,</span> index<span class="token punctuation">}</span> <span class="token operator">=</span> val
            <span class="token keyword">const</span> a<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> item
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> index<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span>
        <span class="token comment">// \u6240\u6709\u7684\u76D1\u542C\u4E8B\u4EF6\u5C5E\u6027\u90FD\u662F\u53EF\u9009\u5C5E\u6027\uFF0C\u53EF\u4EE5\u4E0D\u4F20\u5904\u7406\u51FD\u6570\u53E5\u67C4</span>
        <span class="token comment">// onCloseItem={val =&gt; [{val}]}</span>
    <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token punctuation">)</span>

<span class="token comment">// \u63D0\u793A\uFF0C\u5B9A\u4E49\u7EC4\u4EF6\u7684props\u7C7B\u578B\u65B9\u5F0F\u4E3A { (props: Partial&lt;Convert&lt;Emits&gt;&gt;): any }</span>
<span class="token comment">// \u6BD4\u5982 Comp \u53EF\u4EE5\u63A5\u6536\u5C5E\u6027 {name:string, age:number, flag:boolean, id?:string}\uFF0C\u5176\u4E2Did\u4E3A\u53EF\u9009\u5C5E\u6027\uFF0C\u90A3\u4E48\u53EF\u4EE5\u8FD9\u6837\u5199</span>

<span class="token keyword">const</span> Comp<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span>props<span class="token operator">:</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> flag<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> id<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token builtin">Function</span> <span class="token keyword">as</span> <span class="token builtin">any</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Comp name<span class="token operator">=</span><span class="token string">&quot;&quot;</span> age<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span> flag<span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>           <span class="token comment">// \u6B63\u786E</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Comp name<span class="token operator">=</span><span class="token string">&quot;&quot;</span> age<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span> flag id<span class="token operator">=</span><span class="token string">&quot;111&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>  <span class="token comment">// \u6B63\u786E</span>
<span class="token comment">// console.log(&lt;Comp name={1} age={1} flag/&gt;)          // \u9519\u8BEF\uFF0Cname\u4E3A\u5B57\u7B26\u4E32\u7C7B\u578B</span>
<span class="token comment">// console.log(&lt;Comp age={1} flag/&gt;)                   // \u9519\u8BEF\uFF0C\u7F3A\u5C11\u5FC5\u987B\u5C5E\u6027name:string</span>
</code></pre></div><h2 id="lengthoftuple" tabindex="-1">LengthOfTuple <a class="header-anchor" href="#lengthoftuple" aria-hidden="true">#</a></h2><p>\u8BA1\u7B97\u5143\u7EC4\u7C7B\u578B\u7684\u957F\u5EA6</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> LengthOfTuple<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;F&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token comment">// 3</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token operator">=</span> LengthOfTuple<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token comment">// 0</span>
</code></pre></div><h2 id="firstitem" tabindex="-1">FirstItem <a class="header-anchor" href="#firstitem" aria-hidden="true">#</a></h2><p>\u5F97\u5230\u5143\u7EC4\u7C7B\u578B\u4E2D\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> FirstItem<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token comment">// string</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token operator">=</span> FirstItem<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;F&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token comment">// &#39;B&#39;</span>
</code></pre></div><h2 id="lastitem" tabindex="-1">LastItem <a class="header-anchor" href="#lastitem" aria-hidden="true">#</a></h2><p>\u5F97\u5230\u5143\u7EC4\u7C7B\u578B\u4E2D\u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> LastItem<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token comment">// boolean</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token operator">=</span> LastItem<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;F&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token comment">// &#39;E&#39;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token operator">=</span> LastItem<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token comment">// never</span>
</code></pre></div><h2 id="shift" tabindex="-1">Shift <a class="header-anchor" href="#shift" aria-hidden="true">#</a></h2><p>\u79FB\u9664\u5143\u7EC4\u7C7B\u578B\u4E2D\u7684\u7B2C\u4E00\u4E2A\u7C7B\u578B</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> Shift<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token comment">// [2,3]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token operator">=</span> Shift<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token comment">// []</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token operator">=</span> Shift<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token comment">// []</span>
</code></pre></div><h2 id="push" tabindex="-1">Push <a class="header-anchor" href="#push" aria-hidden="true">#</a></h2><p>\u5728\u5143\u7EC4\u7C7B\u578BT\u4E2D\u6DFB\u52A0\u65B0\u7684\u7C7B\u578BI</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> Push<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token operator">&gt;</span> <span class="token comment">// [1,2,3,4]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token operator">=</span> Push<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">&gt;</span> <span class="token comment">// [1, 2]</span>
</code></pre></div><h2 id="reversetuple" tabindex="-1">ReverseTuple <a class="header-anchor" href="#reversetuple" aria-hidden="true">#</a></h2><p>\u53CD\u8F6C\u5143\u7EC4</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> ReverseTuple<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token comment">// [boolean, number, string]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token operator">=</span> ReverseTuple<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token comment">// [3,2,1]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token operator">=</span> ReverseTuple<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token comment">// []</span>
</code></pre></div><h2 id="flat" tabindex="-1">Flat <a class="header-anchor" href="#flat" aria-hidden="true">#</a></h2><p>\u62CD\u5E73\u5143\u7EC4</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> Flat<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token comment">// [1,2,3]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token operator">=</span> Flat<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token comment">// [1,2,3,4,5,6]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token operator">=</span> Flat<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token comment">// []</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">D</span></span> <span class="token operator">=</span> Flat<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token comment">// [1]</span>
</code></pre></div><h2 id="repeat-t-c" tabindex="-1">Repeat&lt;T,C&gt; <a class="header-anchor" href="#repeat-t-c" aria-hidden="true">#</a></h2><p>\u590D\u5236\u7C7B\u578BT\u4E3AC\u4E2A\u5143\u7D20\u7684\u5143\u7EC4\u7C7B\u578B</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> Repeat<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token operator">&gt;</span> <span class="token comment">// [number, number, number]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token operator">=</span> Repeat<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">&gt;</span> <span class="token comment">// [string, string]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token operator">=</span> Repeat<span class="token operator">&lt;</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">&gt;</span> <span class="token comment">// [1]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">D</span></span> <span class="token operator">=</span> Repeat<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token operator">&gt;</span> <span class="token comment">// []</span>
</code></pre></div><h2 id="filter-t-a" tabindex="-1">Filter&lt;T,A&gt; <a class="header-anchor" href="#filter-t-a" aria-hidden="true">#</a></h2><p>\u4FDD\u7559\u5143\u7EC4\u7C7B\u578BT\u4E2D\u7684A\u7C7B\u578B</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> Filter<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;BFE&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">&#39;dev&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token comment">// [1, 2]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token operator">=</span> Filter<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;BFE&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">&#39;dev&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token comment">// [&#39;BFE&#39;, &#39;dev&#39;]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token operator">=</span> Filter<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;BFE&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token string">&#39;dev&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token comment">// [&#39;BFE&#39;, any, &#39;dev&#39;]</span>
</code></pre></div><h2 id="findindex-t-e" tabindex="-1">FindIndex&lt;T,E&gt; <a class="header-anchor" href="#findindex-t-e" aria-hidden="true">#</a></h2><p>\u627E\u51FAE\u7C7B\u578B\u5728\u5143\u7EC4\u7C7B\u578BT\u4E2D\u7684\u4E0B\u6807</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">never</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token operator">=</span> FindIndex<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">&gt;</span> <span class="token comment">// 2</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token operator">=</span> FindIndex<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token operator">&gt;</span> <span class="token comment">// never</span>
</code></pre></div><h2 id="tupletoenum" tabindex="-1">TupleToEnum <a class="header-anchor" href="#tupletoenum" aria-hidden="true">#</a></h2><p>\u5143\u7EC4\u7C7B\u578B\u8F6C\u6362\u4E3A\u679A\u4E3E\u7C7B\u578B</p><div class="language-ts"><pre><code><span class="token comment">// \u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u679A\u4E3E\u5BF9\u8C61\u4E2D\u7684\u503C\u5C31\u662F\u5143\u7D20\u4E2D\u67D0\u4E2A\u7C7B\u578B\u7684\u5B57\u9762\u91CF\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">a1</span> <span class="token operator">=</span> TupleToEnum<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token string">&quot;MacOS&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Windows&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Linux&quot;</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>
<span class="token comment">// -&gt; { readonly MacOS: &quot;MacOS&quot;, readonly Windows: &quot;Windows&quot;, readonly Linux: &quot;Linux&quot; }</span>

<span class="token comment">// \u5982\u679C\u4F20\u9012\u4E86\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4E3Atrue\uFF0C\u5219\u679A\u4E3E\u5BF9\u8C61\u4E2D\u503C\u7684\u7C7B\u578B\u5C31\u662F\u5143\u7D20\u7C7B\u578B\u4E2D\u67D0\u4E2A\u5143\u7D20\u5728\u5143\u7EC4\u4E2D\u7684index\u7D22\u5F15\uFF0C\u4E5F\u5C31\u662F\u6570\u5B57\u5B57\u9762\u91CF\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">a2</span> <span class="token operator">=</span> TupleToEnum<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token string">&quot;MacOS&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Windows&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Linux&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token operator">&gt;</span>
<span class="token comment">// -&gt; { readonly MacOS: 0, readonly Windows: 1, readonly Linux: 2 }</span>
</code></pre></div><h2 id="slice" tabindex="-1">Slice <a class="header-anchor" href="#slice" aria-hidden="true">#</a></h2><p>\u622A\u53D6\u5143\u7EC4\u4E2D\u7684\u90E8\u5206\u5143\u7D20</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A1</span></span> <span class="token operator">=</span> Slice<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">never</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">&gt;</span>          <span class="token comment">// [any,never,1]                    \u4ECE\u7B2C0\u4E2A\u4F4D\u7F6E\u5F00\u59CB\uFF0C\u4FDD\u7559\u5230\u7B2C2\u4E2A\u4F4D\u7F6E\u7684\u5143\u7D20\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A2</span></span> <span class="token operator">=</span> Slice<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">never</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token operator">&gt;</span>          <span class="token comment">// [never,1,&#39;2&#39;]                    \u4ECE\u7B2C1\u4E2A\u4F4D\u7F6E\u5F00\u59CB\uFF0C\u4FDD\u7559\u5230\u7B2C3\u4E2A\u4F4D\u7F6E\u7684\u5143\u7D20\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A3</span></span> <span class="token operator">=</span> Slice<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">never</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">&gt;</span>          <span class="token comment">// [never,1]                        \u4ECE\u7B2C1\u4E2A\u4F4D\u7F6E\u5F00\u59CB\uFF0C\u4FDD\u7559\u5230\u7B2C2\u4E2A\u4F4D\u7F6E\u7684\u5143\u7D20\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A4</span></span> <span class="token operator">=</span> Slice<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">never</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">&gt;</span>             <span class="token comment">// [1,&#39;2&#39;,true,boolean]             \u4ECE\u7B2C2\u4E2A\u4F4D\u7F6E\u5F00\u59CB\uFF0C\u4FDD\u7559\u540E\u9762\u6240\u6709\u5143\u7D20\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A5</span></span> <span class="token operator">=</span> Slice<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token builtin">any</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">&gt;</span>                                           <span class="token comment">// []                               \u4ECE\u7B2C2\u4E2A\u4F4D\u7F6E\u5F00\u59CB\uFF0C\u4FDD\u7559\u540E\u9762\u6240\u6709\u5143\u7D20\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A6</span></span> <span class="token operator">=</span> Slice<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token operator">&gt;</span>                                              <span class="token comment">// []</span>
</code></pre></div><h2 id="splice" tabindex="-1">Splice <a class="header-anchor" href="#splice" aria-hidden="true">#</a></h2><p>\u5220\u9664\u5E76\u4E14\u66FF\u6362\u90E8\u5206\u5143\u7D20</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A1</span></span> <span class="token operator">=</span> Splice<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token builtin">never</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">&gt;</span>                   <span class="token comment">// [boolean,null,undefined,never]               \u4ECE\u7B2C0\u5F00\u59CB\u5220\u9664\uFF0C\u5220\u96642\u4E2A\u5143\u7D20</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A2</span></span> <span class="token operator">=</span> Splice<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token builtin">never</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token operator">&gt;</span>                   <span class="token comment">// [string,undefined,never]                     \u4ECE\u7B2C1\u5F00\u59CB\u5220\u9664\uFF0C\u5220\u96643\u4E2A\u5143\u7D20</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A3</span></span> <span class="token operator">=</span> Splice<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token builtin">never</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>        <span class="token comment">// [string,1,2,3,null,undefined,never]          \u4ECE\u7B2C1\u5F00\u59CB\u5220\u9664\uFF0C\u5220\u96642\u4E2A\u5143\u7D20\uFF0C\u66FF\u6362\u4E3A\u53E6\u5916\u4E09\u4E2A\u5143\u7D201,2,3</span>

</code></pre></div>__VP_STATIC_END__`,75),o=[e];function c(l,k,r,u,i,m){return a(),s("div",null,o)}var b=n(p,[["render",c]]);export{g as __pageData,b as default};
