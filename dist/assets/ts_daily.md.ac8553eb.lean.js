var m=Object.defineProperty;var o=Object.getOwnPropertySymbols;var b=Object.prototype.hasOwnProperty,B=Object.prototype.propertyIsEnumerable;var l=(a,n,s)=>n in a?m(a,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[n]=s,c=(a,n)=>{for(var s in n||(n={}))b.call(n,s)&&l(a,s,n[s]);if(o)for(var s of o(n))B.call(n,s)&&l(a,s,n[s]);return a};import{_ as h,r,c as C,e as k,w as u,f as g,d as p,o as D,V as A,a as e,b as t}from"./app.57818325.js";const f={name:"component-doc",components:{"render-demo-0":function(){const{openBlock:a,createElementBlock:n}=A;function s(i,F){return a(),n("div",null,"let a = 123")}return c({render:s},{})}()}},K='{"title":"\u6761\u4EF6\u5206\u53D1","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u6761\u4EF6\u5206\u53D1","slug":"\u6761\u4EF6\u5206\u53D1"},{"level":2,"title":"keyof","slug":"keyof"},{"level":2,"title":"namespace \u548C module \u7684\u533A\u522B","slug":"namespace-\u548C-module-\u7684\u533A\u522B"},{"level":2,"title":"declare \u58F0\u660E\u7C7B\u578B","slug":"declare-\u58F0\u660E\u7C7B\u578B"},{"level":2,"title":"\u67E5\u627E\u58F0\u660E\u6587\u4EF6\u914D\u7F6E","slug":"\u67E5\u627E\u58F0\u660E\u6587\u4EF6\u914D\u7F6E"},{"level":2,"title":"\u6A21\u5757\u5185\u58F0\u660E\u5168\u5C40\u7C7B\u578B","slug":"\u6A21\u5757\u5185\u58F0\u660E\u5168\u5C40\u7C7B\u578B"},{"level":2,"title":"\u65E2\u80FD\u5F53\u7C7B\u578B\uFF0C\u53C8\u80FD\u5F53\u5C5E\u6027","slug":"\u65E2\u80FD\u5F53\u7C7B\u578B\uFF0C\u53C8\u80FD\u5F53\u5C5E\u6027"},{"level":2,"title":"any extends \u5224\u65AD\u65F6","slug":"any-extends-\u5224\u65AD\u65F6"},{"level":2,"title":"Equal \u5224\u65AD\u4E24\u4E2A\u5143\u7D20\u662F\u5426\u4E00\u6837","slug":"equal-\u5224\u65AD\u4E24\u4E2A\u5143\u7D20\u662F\u5426\u4E00\u6837"},{"level":2,"title":"\u5143\u7EC4\u76F4\u63A5\u4F7F\u7528 number \u83B7\u53D6\u5185\u5BB9","slug":"\u5143\u7EC4\u76F4\u63A5\u4F7F\u7528-number-\u83B7\u53D6\u5185\u5BB9"},{"level":2,"title":"any \u4F1A\u89E6\u53D1\u5206\u53D1","slug":"any-\u4F1A\u89E6\u53D1\u5206\u53D1"}],"relativePath":"ts/daily.md","lastUpdated":1638796176394}',x=p(`<h2 id="\u6761\u4EF6\u5206\u53D1" tabindex="-1">\u6761\u4EF6\u5206\u53D1 <a class="header-anchor" href="#\u6761\u4EF6\u5206\u53D1" aria-hidden="true">#</a></h2><ul><li>\u53EA\u6709\u9488\u5BF9\u6CDB\u578B\u624D\u6709\u6761\u4EF6\u5206\u53D1\u7684\u6982\u5FF5\u3002\u540C\u65F6\u8FD9\u4E2A\u6CDB\u578B\u662F\u8054\u5408\u7C7B\u578B</li></ul><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A555</span> <span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">string</span><span class="token operator">|</span><span class="token builtin">number</span><span class="token operator">|</span><span class="token number">123</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span>  <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">string</span></span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">2</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A7777</span></span> <span class="token operator">=</span>   <span class="token builtin">string</span><span class="token operator">|</span><span class="token builtin">number</span><span class="token operator">|</span><span class="token builtin">boolean</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">string</span></span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">2</span>   <span class="token comment">// 2</span>
<span class="token keyword">type</span> <span class="token class-name">adfasdf</span> <span class="token operator">=</span> <span class="token constant">A555</span>   <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span>
</code></pre></div>`,3),w=e("div",null,[t("\u4F7F\u7528"),e("code",null,"type"),t("\uFF0C"),e("code",null,"plain"),t("\uFF0C"),e("code",null,"round"),t("\u6765\u5B9A\u4E49 Button \u7684\u6837\u5F0F")],-1),v=e("div",{class:"language-ts"},[e("pre",null,[e("code",null,[e("span",{class:"token keyword"},"let"),t(" a "),e("span",{class:"token operator"},"="),t(),e("span",{class:"token number"},"123"),t(`
`)])])],-1),_=p(`<h2 id="keyof" tabindex="-1">keyof <a class="header-anchor" href="#keyof" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token comment">///////////////// b \u662F\u539F\u578B\u4E0A\u7684\u65B9\u6CD5</span>
<span class="token keyword">type</span> <span class="token class-name">a</span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span>
<span class="token keyword">type</span> <span class="token class-name">b</span>  <span class="token operator">=</span> <span class="token keyword">keyof</span> a  <span class="token comment">// &#39;toString&#39; | &#39;valueOf&#39;</span>

<span class="token keyword">keyof</span> <span class="token keyword">interface</span> <span class="token class-name">\u624D\u662F\u5C5E\u6027\u540D\u96C6\u5408</span>
</code></pre></div><h2 id="namespace-\u548C-module-\u7684\u533A\u522B" tabindex="-1">namespace \u548C module \u7684\u533A\u522B <a class="header-anchor" href="#namespace-\u548C-module-\u7684\u533A\u522B" aria-hidden="true">#</a></h2>`,3),q=p(`<h2 id="declare-\u58F0\u660E\u7C7B\u578B" tabindex="-1">declare \u58F0\u660E\u7C7B\u578B <a class="header-anchor" href="#declare-\u58F0\u660E\u7C7B\u578B" aria-hidden="true">#</a></h2><p>\u63D0\u793A\u7528\u7684</p><div class="language-ts"><pre><code><span class="token comment">// declare \u5199\u5B8C\u540E \u81EA\u5DF1\u53EF\u4EE5\u4E0D\u5B9E\u73B0\uFF0C\u522B\u7684\u5730\u65B9\u5B9E\u73B0\u3002</span>
<span class="token comment">// \u4E0D\u52A0declare \u7684\u8BDD\uFF0C\u8868\u793A\u53EA\u58F0\u660E\u4E86\uFF0C\u6CA1\u6709\u5B9E\u73B0\uFF0C\u4F7F\u7528\u4F1A\u62A5\u9519  \u65E0\u6CD5 $. \u8C03\u7528</span>
<span class="token keyword">declare</span> <span class="token keyword">namespace</span> $ <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">ajax</span><span class="token punctuation">(</span>url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> settings<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
  <span class="token keyword">let</span> name<span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token keyword">namespace</span> fn <span class="token punctuation">{</span>
    <span class="token keyword">function</span> <span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u67E5\u627E\u58F0\u660E\u6587\u4EF6\u914D\u7F6E" tabindex="-1">\u67E5\u627E\u58F0\u660E\u6587\u4EF6\u914D\u7F6E <a class="header-anchor" href="#\u67E5\u627E\u58F0\u660E\u6587\u4EF6\u914D\u7F6E" aria-hidden="true">#</a></h2><div class="language-json"><pre><code><span class="token property">&quot;baseUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u4F7F\u7528 paths \u5FC5\u987B\u914D\u7F6E</span>
<span class="token property">&quot;paths&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;*&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;types/*&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u6A21\u5757\u5185\u58F0\u660E\u5168\u5C40\u7C7B\u578B" tabindex="-1">\u6A21\u5757\u5185\u58F0\u660E\u5168\u5C40\u7C7B\u578B <a class="header-anchor" href="#\u6A21\u5757\u5185\u58F0\u660E\u5168\u5C40\u7C7B\u578B" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token comment">/**
 *ts \u6587\u4EF6\u58F0\u660E \u6A21\u5757 export {}\uFF0C \u5C40\u90E8\u53D8\u91CF\u65E0\u6CD5\u62D3\u5C55\u5C5E\u6027
 \u6A21\u5757\u5185\u58F0\u660E\u5168\u5C40\u5C5E\u6027
 */</span>
<span class="token keyword">declare</span> global <span class="token punctuation">{</span>
  <span class="token keyword">interface</span> <span class="token class-name">String</span> <span class="token punctuation">{</span>

  <span class="token punctuation">}</span>
  <span class="token keyword">interface</span> <span class="token class-name">String</span> <span class="token punctuation">{</span>
    <span class="token function">double</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u65E2\u80FD\u5F53\u7C7B\u578B\uFF0C\u53C8\u80FD\u5F53\u5C5E\u6027" tabindex="-1">\u65E2\u80FD\u5F53\u7C7B\u578B\uFF0C\u53C8\u80FD\u5F53\u5C5E\u6027 <a class="header-anchor" href="#\u65E2\u80FD\u5F53\u7C7B\u578B\uFF0C\u53C8\u80FD\u5F53\u5C5E\u6027" aria-hidden="true">#</a></h2><table><thead><tr><th style="text-align:left;">\u5173\u952E\u5B57</th><th style="text-align:center;">\u7C7B\u578B</th><th style="text-align:center;">\u503C</th></tr></thead><tbody><tr><td style="text-align:left;">class</td><td style="text-align:center;">yes</td><td style="text-align:center;">yes</td></tr><tr><td style="text-align:left;">enum</td><td style="text-align:center;">yes</td><td style="text-align:center;">yes</td></tr><tr><td style="text-align:left;">interface</td><td style="text-align:center;">yes</td><td style="text-align:center;">no</td></tr><tr><td style="text-align:left;">type</td><td style="text-align:center;">yes</td><td style="text-align:center;">no</td></tr><tr><td style="text-align:left;">function</td><td style="text-align:center;">no</td><td style="text-align:center;">yes</td></tr><tr><td style="text-align:left;">var, let, const</td><td style="text-align:center;">no</td><td style="text-align:center;">yes</td></tr></tbody></table><h2 id="any-extends-\u5224\u65AD\u65F6" tabindex="-1">any extends \u5224\u65AD\u65F6 <a class="header-anchor" href="#any-extends-\u5224\u65AD\u65F6" aria-hidden="true">#</a></h2><p>\u8F6C\u4E3A\u6570\u7EC4</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">a</span> <span class="token operator">=</span> <span class="token builtin">any</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">number</span></span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">2</span>  <span class="token comment">// 1 | 2</span>
<span class="token keyword">type</span> <span class="token class-name">aa</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">any</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">2</span>  <span class="token comment">// 1</span>
</code></pre></div><h2 id="equal-\u5224\u65AD\u4E24\u4E2A\u5143\u7D20\u662F\u5426\u4E00\u6837" tabindex="-1">Equal \u5224\u65AD\u4E24\u4E2A\u5143\u7D20\u662F\u5426\u4E00\u6837 <a class="header-anchor" href="#equal-\u5224\u65AD\u4E24\u4E2A\u5143\u7D20\u662F\u5426\u4E00\u6837" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token comment">// \u5224\u65AD\u4E24\u4E2A\u5143\u7D20\u662F\u5426\u4E00\u6837</span>
<span class="token keyword">type</span> <span class="token class-name">Equal<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant">T</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token punctuation">[</span><span class="token constant">T</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token punctuation">(</span>
  <span class="token keyword">keyof</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">K</span> <span class="token operator">?</span> <span class="token punctuation">(</span>
    <span class="token keyword">keyof</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span>
  <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token boolean">false</span> <span class="token operator">:</span> <span class="token boolean">false</span>
</code></pre></div><h2 id="\u5143\u7EC4\u76F4\u63A5\u4F7F\u7528-number-\u83B7\u53D6\u5185\u5BB9" tabindex="-1">\u5143\u7EC4\u76F4\u63A5\u4F7F\u7528 number \u83B7\u53D6\u5185\u5BB9 <a class="header-anchor" href="#\u5143\u7EC4\u76F4\u63A5\u4F7F\u7528-number-\u83B7\u53D6\u5185\u5BB9" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">aa</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;33&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dd&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sadf&#39;</span><span class="token punctuation">]</span>
<span class="token comment">/**
 * \u5BF9\u4E8E\u5143\u7EC4\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528 number \u83B7\u53D6\u6BCF\u9879\u5185\u5BB9
 * type a = {
    33: &quot;33&quot;;
    dd: &quot;dd&quot;;
    sadf: &quot;sadf&quot;;
}
 */</span>
<span class="token keyword">type</span> <span class="token class-name">a</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>k <span class="token keyword">in</span> aa<span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">:</span> k
<span class="token punctuation">}</span>
</code></pre></div><h2 id="any-\u4F1A\u89E6\u53D1\u5206\u53D1" tabindex="-1">any \u4F1A\u89E6\u53D1\u5206\u53D1 <a class="header-anchor" href="#any-\u4F1A\u89E6\u53D1\u5206\u53D1" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token builtin">any</span>  <span class="token operator">=</span> <span class="token builtin">string</span><span class="token operator">|</span> <span class="token builtin">boolean</span><span class="token operator">|</span> <span class="token builtin">number</span><span class="token operator">|</span> <span class="token builtin">symbol</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">|</span> \u5143\u7EC4 <span class="token operator">|</span> object
<span class="token builtin">any</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">never</span></span> <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token operator">|</span> <span class="token boolean">false</span>  <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span>
<span class="token builtin">any</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">never</span></span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">=&gt;</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span>



<span class="token keyword">type</span> <span class="token class-name">isTrue<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token boolean">true</span></span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">2</span>
isTrue<span class="token operator">&lt;</span>Boolean<span class="token operator">&gt;</span> \u4F1A\u5206\u53D1
</code></pre></div>`,18);function T(a,n,s,d,i,F){const E=r("render-demo-0"),y=r("demo");return D(),C("div",null,[x,k(y,{sourceCode:`let a = 123
`},{description:u(()=>[w]),highlight:u(()=>[v]),default:u(()=>[k(E)]),_:1}),_,g(` 1. namespace \u662F\u5168\u5C40\u7684\uFF0C\u4F1A\u5408\u5E76\uFF0C\u540C\u4E00\u4E2A namespace \u4E0B\u6709\u540C\u4E00\u4E2A\u540D\u7684\u5143\u7D20\uFF0C\u4F1A\u51B2\u7A81\u3002\u4F7F\u7528 export \u8F6C\u6210\u6A21\u5757\u5219\u4E0D\u4F1A
2. module \u4E0D\u4F1A\u5408\u5E76 `),q])}var N=h(f,[["render",T]]);export{K as __pageData,N as default};
